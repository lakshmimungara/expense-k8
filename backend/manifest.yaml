# # apiVersion: v1                             # API version for the ConfigMap
# # kind: ConfigMap                             # Resource type: ConfigMap
# # metadata:
# #   name: backend                             # Name of the ConfigMap
# #   namespace: expense                        # Namespace where this ConfigMap will be created
# # data:
# #   DB_HOST: mysql                            # Sets "DB_HOST" to "mysql" for backend configuration
# # ---
# # apiVersion: apps/v1                        # API version for the Deployment
# # kind: Deployment                            # Resource type: Deployment
# # metadata:
# #   name: backend                             # Name of the Deployment
# #   namespace: expense                        # Namespace for the Deployment
# #   labels:
# #     app: backend                            # Labels associated with the Deployment
# #     tier: api                               # Labels for categorizing the tier
# #     project: expense                        # Labels to associate with the project
# # spec:
# #   replicas: 2                               # Desired number of replicas for the backend Pods
# #   selector:
# #     matchLabels:                            # Selector to identify which Pods belong to this Deployment
# #       app: backend                          # Matches Pods with label "app: backend"
# #       tier: api                             # Matches Pods with label "tier: api"
# #       project: expense                      # Matches Pods with label "project: expense"
# #   template:                                 # Template for the Pods managed by this Deployment
# #     metadata:
# #       labels:
# #         app: backend                        # Label "app: backend" added to the Pod
# #         tier: api                           # Label "tier: api" added to the Pod
# #         project: expense                    # Label "project: expense" added to the Pod
# #     spec:
# #       containers:
# #       - name: backend                       # Container name
# #         image: mahalakshmi2997/backend:v1   # Docker image for the backend application
# #         envFrom:
# #         - configMapRef:                     # Environment variable configuration
# #             name: backend                   # Refers to the ConfigMap named "backend" for environment variables
# # ---
# # kind: Service                               # Resource type: Service
# # apiVersion: v1                              # API version for the Service
# # metadata:
# #   name: backend                             # Name of the Service
# #   namespace: expense                        # Namespace for the Service
# # spec:
# #   selector:
# #     app: backend                            # Matches Pods with label "app: backend"
# #     tier: api                               # Matches Pods with label "tier: api"
# #     project: expense                        # Matches Pods with label "project: expense"
# #   ports:
# #   - name: backend-port                      # Port name
# #     protocol: TCP                           # Protocol type
# #     port: 8080                              # Exposed port for accessing the service
# #     targetPort: 8080                        # Port on the container to which traffic should be directed



# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: backend
#   namespace: expense
# data:
#   DB_HOST: mysql
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: backend
#   namespace: expense
#   labels:
#     app: backend
#     tier: api
#     project: expense
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: backend
#       tier: api
#       project: expense
#   template:
#     metadata:
#       labels:
#         app: backend
#         tier: api
#         project: expense
#     spec:
#       containers:
#       - name: backend
#         image: mahalakshmi2997/backend:v1
#         resources:
#           requests:
#             cpu: 100m
#             memory: 128Mi
#           # limits is greater than or equal to requests
#           limits:
#             cpu: 100m
#             memory: 128Mi
#         envFrom:
#         - configMapRef:
#             name: backend
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: backend
#   namespace: expense
# spec:
#   selector:
#     app: backend
#     tier: api
#     project: expense
#   ports:
#   - name: backend-port
#     protocol: TCP
#     port: 8080 # service port
#     targetPort: 8080 # container port
# ---
# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#  name: backend
#  namespace: expense
# spec:
#  scaleTargetRef:
#    apiVersion: apps/v1
#    kind: Deployment
#    name: backend
#  minReplicas: 1
#  maxReplicas: 10
#  targetCPUUtilizationPercentage: 15 # usually 75 in real environment



# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: backend
#   namespace: expense
# data:
#   DB_HOST: mysql
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: backend
#   namespace: expense
#   labels:
#     app: backend
#     tier: api
#     project: expense
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: backend
#       tier: api
#       project: expense
#   template:
#     metadata:
#       labels:
#         app: backend
#         tier: api
#         project: expense
#     spec:
#       containers:
#       - name: backend
#         image: mahalakshmi2997/backend:v1
#         resources:
#           requests:
#             cpu: 100m
#             memory: 128Mi
#           # limits is greater than or equal to requests
#           limits:
#             cpu: 100m
#             memory: 128Mi
#         envFrom:
#         - configMapRef:
#             name: backend
#         readinessProbe:
#           tcpSocket:
#             port: 8080
#           initialDelaySeconds: 15
#           periodSeconds: 10
#         livenessProbe:
#           httpGet:
#             path: /health
#             port: 8080
#           initialDelaySeconds: 3
#           periodSeconds: 3
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: backend
#   namespace: expense
# spec:
#   selector:
#     app: backend
#     tier: api
#     project: expense
#   ports:
#   - name: backend-port
#     protocol: TCP
#     port: 8080 # service port
#     targetPort: 8080 # container port
# ---
# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#  name: backend
#  namespace: expense
# spec:
#  scaleTargetRef:
#    apiVersion: apps/v1
#    kind: Deployment
#    name: backend
#  minReplicas: 1
#  maxReplicas: 10
#  targetCPUUtilizationPercentage: 15 # usually 75 in real environment


apiVersion: v1
kind: ConfigMap
metadata:
  name: backend
  namespace: expense
data:
  DB_HOST: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: expense
  labels:
    app: backend
    tier: api
    project: expense
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
      tier: api
      project: expense
  template:
    metadata:
      labels:
        app: backend
        tier: api
        project: expense
    spec:
      initContainers:
      - name: mysql-check
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup mysql; do echo waiting for myservice; sleep 2; done"]
      containers:
      - name: backend
        image: mahalakshmi2997/backend:v1
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          # limits is greater than or equal to requests
          limits:
            cpu: 100m
            memory: 128Mi
        envFrom:
        - configMapRef:
            name: backend
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
---
kind: Service
apiVersion: v1
metadata:
  name: backend
  namespace: expense
spec:
  selector:
    app: backend
    tier: api
    project: expense
  ports:
  - name: backend-port
    protocol: TCP
    port: 8080 # service port
    targetPort: 8080 # container port
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: backend
 namespace: expense
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: backend
 minReplicas: 1
 maxReplicas: 10
 targetCPUUtilizationPercentage: 15 # usually 75 in real environment
 